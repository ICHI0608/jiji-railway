# Prometheus + Grafana - 統合監視システム
# 完全無料構成

version: '3.8'

services:
  # Prometheus - メトリクス収集・保存
  prometheus:
    image: prom/prometheus:latest
    container_name: jiji-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--storage.tsdb.retention.time=30d'
      - '--storage.tsdb.retention.size=1GB'
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/rules:/etc/prometheus/rules:ro
      - prometheus-data:/prometheus
    networks:
      - monitoring-network
    restart: unless-stopped
    depends_on:
      - node-exporter
      - cadvisor
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Grafana - データ可視化
  grafana:
    image: grafana/grafana:latest
    container_name: jiji-grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
    networks:
      - monitoring-network
    restart: unless-stopped
    depends_on:
      - prometheus
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Node Exporter - システムメトリクス収集
  node-exporter:
    image: prom/node-exporter:latest
    container_name: jiji-node-exporter
    command:
      - '--path.rootfs=/host'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    volumes:
      - '/:/host:ro,rslave'
    networks:
      - monitoring-network
    restart: unless-stopped
    pid: host

  # cAdvisor - コンテナメトリクス収集
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: jiji-cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    networks:
      - monitoring-network
    restart: unless-stopped
    privileged: true

  # AlertManager - アラート管理
  alertmanager:
    image: prom/alertmanager:latest
    container_name: jiji-alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager/config.yml:/etc/alertmanager/config.yml:ro
      - alertmanager-data:/alertmanager
    networks:
      - monitoring-network
    restart: unless-stopped
    depends_on:
      - prometheus

  # Blackbox Exporter - 外形監視
  blackbox-exporter:
    image: prom/blackbox-exporter:latest
    container_name: jiji-blackbox-exporter
    ports:
      - "9115:9115"
    volumes:
      - ./blackbox/config.yml:/config/blackbox.yml:ro
    networks:
      - monitoring-network
    restart: unless-stopped
    command:
      - '--config.file=/config/blackbox.yml'

networks:
  monitoring-network:
    driver: bridge

volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  alertmanager-data:
    driver: local