# Logstash設定 - Jijiダイビングボット用ログ処理
input {
  # アプリケーションログファイルの監視
  file {
    path => "/usr/share/logstash/logs/*.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    codec => "json"
    type => "application"
  }
  
  # セキュリティログの監視
  file {
    path => "/usr/share/logstash/logs/security*.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    codec => "json"
    type => "security"
  }
  
  # APIログの監視
  file {
    path => "/usr/share/logstash/logs/api*.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    codec => "json"
    type => "api"
  }
  
  # パフォーマンスログの監視
  file {
    path => "/usr/share/logstash/logs/performance*.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    codec => "json"
    type => "performance"
  }
  
  # 業務ログの監視
  file {
    path => "/usr/share/logstash/logs/business*.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    codec => "json"
    type => "business"
  }
}

filter {
  # 共通フィルター
  if [type] {
    # タイムスタンプの正規化
    date {
      match => [ "timestamp", "ISO8601" ]
    }
    
    # IPアドレスの地理的位置情報を追加
    if [ip] {
      geoip {
        source => "ip"
        target => "geoip"
      }
    }
    
    # ユーザーエージェントの解析
    if [userAgent] {
      useragent {
        source => "userAgent"
        target => "user_agent"
      }
    }
  }
  
  # セキュリティログの特別処理
  if [type] == "security" {
    # 脅威レベルの分類
    if [level] == "error" {
      mutate {
        add_field => { "threat_level" => "high" }
      }
    } else if [level] == "warn" {
      mutate {
        add_field => { "threat_level" => "medium" }
      }
    } else {
      mutate {
        add_field => { "threat_level" => "low" }
      }
    }
    
    # セキュリティイベントの分類
    if [event] {
      if [event] =~ /(?i)attack|intrusion|malware|exploit/ {
        mutate {
          add_field => { "security_category" => "attack" }
        }
      } else if [event] =~ /(?i)auth|login|credential/ {
        mutate {
          add_field => { "security_category" => "authentication" }
        }
      } else if [event] =~ /(?i)access|permission|authorization/ {
        mutate {
          add_field => { "security_category" => "authorization" }
        }
      } else {
        mutate {
          add_field => { "security_category" => "general" }
        }
      }
    }
  }
  
  # APIログの特別処理
  if [type] == "api" {
    # レスポンス時間の分類
    if [duration] {
      if [duration] >= 5000 {
        mutate {
          add_field => { "response_performance" => "very_slow" }
        }
      } else if [duration] >= 2000 {
        mutate {
          add_field => { "response_performance" => "slow" }
        }
      } else if [duration] >= 1000 {
        mutate {
          add_field => { "response_performance" => "normal" }
        }
      } else {
        mutate {
          add_field => { "response_performance" => "fast" }
        }
      }
    }
    
    # HTTPステータスコードの分類
    if [status] {
      if [status] >= 500 {
        mutate {
          add_field => { "status_category" => "server_error" }
        }
      } else if [status] >= 400 {
        mutate {
          add_field => { "status_category" => "client_error" }
        }
      } else if [status] >= 300 {
        mutate {
          add_field => { "status_category" => "redirect" }
        }
      } else if [status] >= 200 {
        mutate {
          add_field => { "status_category" => "success" }
        }
      }
    }
  }
  
  # パフォーマンスログの特別処理
  if [type] == "performance" {
    # メトリクスの分類
    if [metric] {
      if [metric] =~ /(?i)memory|cpu|disk/ {
        mutate {
          add_field => { "metric_category" => "system" }
        }
      } else if [metric] =~ /(?i)response|latency|throughput/ {
        mutate {
          add_field => { "metric_category" => "application" }
        }
      } else if [metric] =~ /(?i)database|query|connection/ {
        mutate {
          add_field => { "metric_category" => "database" }
        }
      }
    }
  }
  
  # 業務ログの特別処理
  if [type] == "business" {
    # 業務イベントの分類
    if [event] {
      if [event] =~ /(?i)user|member|registration/ {
        mutate {
          add_field => { "business_category" => "user_management" }
        }
      } else if [event] =~ /(?i)shop|diving|booking/ {
        mutate {
          add_field => { "business_category" => "service" }
        }
      } else if [event] =~ /(?i)payment|billing|subscription/ {
        mutate {
          add_field => { "business_category" => "financial" }
        }
      } else if [event] =~ /(?i)review|rating|feedback/ {
        mutate {
          add_field => { "business_category" => "feedback" }
        }
      }
    }
  }
  
  # 機密情報のマスキング
  mutate {
    gsub => [
      "message", "password=[^&\s]*", "password=***",
      "message", "token=[^&\s]*", "token=***",
      "message", "key=[^&\s]*", "key=***",
      "message", "secret=[^&\s]*", "secret=***"
    ]
  }
  
  # 不要なフィールドの削除
  mutate {
    remove_field => [ "host", "path", "@version" ]
  }
}

output {
  # Elasticsearchへの出力
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "jiji-logs-%{type}-%{+YYYY.MM.dd}"
    template_name => "jiji-logs"
    template_pattern => "jiji-logs-*"
    template => {
      "index_patterns" => ["jiji-logs-*"],
      "mappings" => {
        "properties" => {
          "@timestamp" => { "type" => "date" },
          "level" => { "type" => "keyword" },
          "message" => { "type" => "text", "analyzer" => "standard" },
          "type" => { "type" => "keyword" },
          "ip" => { "type" => "ip" },
          "duration" => { "type" => "long" },
          "status" => { "type" => "short" },
          "threat_level" => { "type" => "keyword" },
          "security_category" => { "type" => "keyword" },
          "response_performance" => { "type" => "keyword" },
          "status_category" => { "type" => "keyword" },
          "metric_category" => { "type" => "keyword" },
          "business_category" => { "type" => "keyword" }
        }
      }
    }
  }
  
  # 開発環境でのデバッグ出力
  if [type] == "security" and [level] == "error" {
    stdout { 
      codec => rubydebug 
    }
  }
}